   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SerialComms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 256600   		.ascii	"%f\000"
  22 0003 00       		.align	2
  23              	.LC2:
  24 0004 53746565 		.ascii	"Steering Value: \000"
  24      72696E67 
  24      2056616C 
  24      75653A20 
  24      00
  25 0015 000000   		.align	2
  26              	.LC4:
  27 0018 0A00     		.ascii	"\012\000"
  28 001a 0000     		.align	2
  29              	.LC6:
  30 001c 0000     		.ascii	"\000\000"
  31              		.section	.text.format,"ax",%progbits
  32              		.align	2
  33              		.global	format
  34              		.code	16
  35              		.thumb_func
  37              	format:
  38              	.LFB0:
  39              		.file 1 "../Sources/SerialComms.c"
   1:../Sources/SerialComms.c **** /*
   2:../Sources/SerialComms.c ****  * SerialComms.c
   3:../Sources/SerialComms.c ****  *
   4:../Sources/SerialComms.c ****  *  Created on: Feb 4, 2016
   5:../Sources/SerialComms.c ****  *      Author: Jared
   6:../Sources/SerialComms.c ****  */
   7:../Sources/SerialComms.c **** #include "TFC\TFC.h"
   8:../Sources/SerialComms.c **** #include "stdlib.h"
   9:../Sources/SerialComms.c **** #include "Common.h"
  10:../Sources/SerialComms.c **** #include "string.h"
  11:../Sources/SerialComms.c **** 
  12:../Sources/SerialComms.c **** char* format( struct Command* command, uint8_t* cameraData ){
  40              		.loc 1 12 0
  41              		.cfi_startproc
  42 0000 90B5     		push	{r4, r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 12
  45              		.cfi_offset 4, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 89B0     		sub	sp, sp, #36
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 48
  51 0004 02AF     		add	r7, sp, #8
  52              	.LCFI2:
  53              		.cfi_def_cfa 7, 40
  54 0006 7860     		str	r0, [r7, #4]
  55 0008 3960     		str	r1, [r7]
  13:../Sources/SerialComms.c **** 	
  14:../Sources/SerialComms.c **** 	int size;
  15:../Sources/SerialComms.c **** 	char test[1];
  16:../Sources/SerialComms.c **** 	char* string = (char*) malloc(200);
  56              		.loc 1 16 0
  57 000a C820     		mov	r0, #200
  58 000c FFF7FEFF 		bl	malloc
  59 0010 031C     		mov	r3, r0
  60 0012 7B61     		str	r3, [r7, #20]
  17:../Sources/SerialComms.c **** 	size = snprintf( test, sizeof(test), "%f", command -> steerValue ) + 1;
  61              		.loc 1 17 0
  62 0014 7B68     		ldr	r3, [r7, #4]
  63 0016 1B68     		ldr	r3, [r3]
  64 0018 181C     		add	r0, r3, #0
  65 001a FFF7FEFF 		bl	__aeabi_f2d
  66 001e 031C     		mov	r3, r0
  67 0020 0C1C     		mov	r4, r1
  68 0022 391C     		mov	r1, r7
  69 0024 0831     		add	r1, r1, #8
  70 0026 264A     		ldr	r2, .L3
  71 0028 0093     		str	r3, [sp]
  72 002a 0194     		str	r4, [sp, #4]
  73 002c 081C     		mov	r0, r1
  74 002e 0121     		mov	r1, #1
  75 0030 FFF7FEFF 		bl	snprintf
  76 0034 031C     		mov	r3, r0
  77 0036 0133     		add	r3, r3, #1
  78 0038 3B61     		str	r3, [r7, #16]
  18:../Sources/SerialComms.c **** 	char* stringT = (char*) malloc(size);
  79              		.loc 1 18 0
  80 003a 3B69     		ldr	r3, [r7, #16]
  81 003c 181C     		mov	r0, r3
  82 003e FFF7FEFF 		bl	malloc
  83 0042 031C     		mov	r3, r0
  84 0044 FB60     		str	r3, [r7, #12]
  19:../Sources/SerialComms.c **** 	sprintf(stringT, "%f", command -> steerValue );
  85              		.loc 1 19 0
  86 0046 7B68     		ldr	r3, [r7, #4]
  87 0048 1B68     		ldr	r3, [r3]
  88 004a 181C     		add	r0, r3, #0
  89 004c FFF7FEFF 		bl	__aeabi_f2d
  90 0050 031C     		mov	r3, r0
  91 0052 0C1C     		mov	r4, r1
  92 0054 F968     		ldr	r1, [r7, #12]
  93 0056 1A4A     		ldr	r2, .L3
  94 0058 081C     		mov	r0, r1
  95 005a 111C     		mov	r1, r2
  96 005c 1A1C     		mov	r2, r3
  97 005e 231C     		mov	r3, r4
  98 0060 FFF7FEFF 		bl	sprintf
  20:../Sources/SerialComms.c **** 	strcat(string, "Steering Value: ");
  99              		.loc 1 20 0
 100 0064 7B69     		ldr	r3, [r7, #20]
 101 0066 181C     		mov	r0, r3
 102 0068 FFF7FEFF 		bl	strlen
 103 006c 031C     		mov	r3, r0
 104 006e 7A69     		ldr	r2, [r7, #20]
 105 0070 D218     		add	r2, r2, r3
 106 0072 144B     		ldr	r3, .L3+4
 107 0074 111C     		mov	r1, r2
 108 0076 1A1C     		mov	r2, r3
 109 0078 1123     		mov	r3, #17
 110 007a 081C     		mov	r0, r1
 111 007c 111C     		mov	r1, r2
 112 007e 1A1C     		mov	r2, r3
 113 0080 FFF7FEFF 		bl	memcpy
  21:../Sources/SerialComms.c **** 	strcat(string, stringT);
 114              		.loc 1 21 0
 115 0084 7A69     		ldr	r2, [r7, #20]
 116 0086 FB68     		ldr	r3, [r7, #12]
 117 0088 101C     		mov	r0, r2
 118 008a 191C     		mov	r1, r3
 119 008c FFF7FEFF 		bl	strcat
  22:../Sources/SerialComms.c **** 	strcat(string, "\n");
 120              		.loc 1 22 0
 121 0090 7B69     		ldr	r3, [r7, #20]
 122 0092 181C     		mov	r0, r3
 123 0094 FFF7FEFF 		bl	strlen
 124 0098 031C     		mov	r3, r0
 125 009a 7A69     		ldr	r2, [r7, #20]
 126 009c D218     		add	r2, r2, r3
 127 009e 0A4B     		ldr	r3, .L3+8
 128 00a0 111C     		mov	r1, r2
 129 00a2 1A1C     		mov	r2, r3
 130 00a4 0223     		mov	r3, #2
 131 00a6 081C     		mov	r0, r1
 132 00a8 111C     		mov	r1, r2
 133 00aa 1A1C     		mov	r2, r3
 134 00ac FFF7FEFF 		bl	memcpy
  23:../Sources/SerialComms.c **** 	
  24:../Sources/SerialComms.c **** 	string = "\0";
 135              		.loc 1 24 0
 136 00b0 064B     		ldr	r3, .L3+12
 137 00b2 7B61     		str	r3, [r7, #20]
  25:../Sources/SerialComms.c **** 	// TODO Implement format logic
  26:../Sources/SerialComms.c **** 	return string;
 138              		.loc 1 26 0
 139 00b4 7B69     		ldr	r3, [r7, #20]
  27:../Sources/SerialComms.c **** }
 140              		.loc 1 27 0
 141 00b6 181C     		mov	r0, r3
 142 00b8 BD46     		mov	sp, r7
 143 00ba 07B0     		add	sp, sp, #28
 144              		@ sp needed for prologue
 145 00bc 90BD     		pop	{r4, r7, pc}
 146              	.L4:
 147 00be C046     		.align	2
 148              	.L3:
 149 00c0 00000000 		.word	.LC0
 150 00c4 04000000 		.word	.LC2
 151 00c8 18000000 		.word	.LC4
 152 00cc 1C000000 		.word	.LC6
 153              		.cfi_endproc
 154              	.LFE0:
 156              		.section	.rodata
 157 001e 0000     		.align	2
 158              	.LC8:
 159 0020 257300   		.ascii	"%s\000"
 160 0023 00       		.section	.text.print,"ax",%progbits
 161              		.align	2
 162              		.global	print
 163              		.code	16
 164              		.thumb_func
 166              	print:
 167              	.LFB1:
  28:../Sources/SerialComms.c **** 
  29:../Sources/SerialComms.c **** void print( struct Command* command, uint8_t* cameraData){
 168              		.loc 1 29 0
 169              		.cfi_startproc
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 84B0     		sub	sp, sp, #16
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 24
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI5:
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 3960     		str	r1, [r7]
  30:../Sources/SerialComms.c **** 	
  31:../Sources/SerialComms.c **** 	// Gets the formatted string of data
  32:../Sources/SerialComms.c **** 	char* string = format( command, cameraData );
 183              		.loc 1 32 0
 184 000a 7A68     		ldr	r2, [r7, #4]
 185 000c 3B68     		ldr	r3, [r7]
 186 000e 101C     		mov	r0, r2
 187 0010 191C     		mov	r1, r3
 188 0012 FFF7FEFF 		bl	format
 189 0016 031C     		mov	r3, r0
 190 0018 FB60     		str	r3, [r7, #12]
  33:../Sources/SerialComms.c **** 	
  34:../Sources/SerialComms.c **** 	// Prints the formatted string of data
  35:../Sources/SerialComms.c **** 	printf( "%s", string );
 191              		.loc 1 35 0
 192 001a 064A     		ldr	r2, .L6
 193 001c FB68     		ldr	r3, [r7, #12]
 194 001e 101C     		mov	r0, r2
 195 0020 191C     		mov	r1, r3
 196 0022 FFF7FEFF 		bl	printf
  36:../Sources/SerialComms.c **** 	
  37:../Sources/SerialComms.c **** 	// Frees the malloc'd memory for the the string
  38:../Sources/SerialComms.c **** 	free(string);
 197              		.loc 1 38 0
 198 0026 FB68     		ldr	r3, [r7, #12]
 199 0028 181C     		mov	r0, r3
 200 002a FFF7FEFF 		bl	free
  39:../Sources/SerialComms.c **** }
 201              		.loc 1 39 0
 202 002e BD46     		mov	sp, r7
 203 0030 04B0     		add	sp, sp, #16
 204              		@ sp needed for prologue
 205 0032 80BD     		pop	{r7, pc}
 206              	.L7:
 207              		.align	2
 208              	.L6:
 209 0034 20000000 		.word	.LC8
 210              		.cfi_endproc
 211              	.LFE1:
 213              		.section	.text.save,"ax",%progbits
 214              		.align	2
 215              		.global	save
 216              		.code	16
 217              		.thumb_func
 219              	save:
 220              	.LFB2:
  40:../Sources/SerialComms.c **** 
  41:../Sources/SerialComms.c **** void save( struct Command* command, uint8_t* cameraData){
 221              		.loc 1 41 0
 222              		.cfi_startproc
 223 0000 80B5     		push	{r7, lr}
 224              	.LCFI6:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 82B0     		sub	sp, sp, #8
 229              	.LCFI7:
 230              		.cfi_def_cfa_offset 16
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI8:
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 235 0008 3960     		str	r1, [r7]
  42:../Sources/SerialComms.c **** 	// TODO Implement save logic
  43:../Sources/SerialComms.c **** }
 236              		.loc 1 43 0
 237 000a BD46     		mov	sp, r7
 238 000c 02B0     		add	sp, sp, #8
 239              		@ sp needed for prologue
 240 000e 80BD     		pop	{r7, pc}
 241              		.cfi_endproc
 242              	.LFE2:
 244              		.text
 245              	.Letext0:
 246              		.file 2 "../Sources/Common.h"
 247              		.file 3 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
DEFINED SYMBOLS
                            *ABS*:00000000 SerialComms.c
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:19     .rodata:00000000 $d
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:32     .text.format:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:37     .text.format:00000000 format
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:149    .text.format:000000c0 $d
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:161    .text.print:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:166    .text.print:00000000 print
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:209    .text.print:00000034 $d
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:214    .text.save:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccrX0tLd.s:219    .text.save:00000000 save
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
malloc
snprintf
sprintf
strlen
memcpy
strcat
printf
free
