   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.forwardFull,"ax",%progbits
  18              		.align	2
  19              		.global	forwardFull
  20              		.code	16
  21              		.thumb_func
  23              	forwardFull:
  24              	.LFB0:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** #include "Algorithms.h"
   4:../Sources/main.c **** #include "Common.h"
   5:../Sources/main.c **** 
   6:../Sources/main.c **** #define DEL 50
   7:../Sources/main.c **** #define START_PIXEL 10
   8:../Sources/main.c **** #define STOP_PIXEL 118
   9:../Sources/main.c **** 
  10:../Sources/main.c **** 
  11:../Sources/main.c **** void forwardFull(){
  26              		.loc 1 11 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  12:../Sources/main.c ****     TFC_HBRIDGE_ENABLE;
  36              		.loc 1 12 0
  37 0004 0F4B     		ldr	r3, .L2
  38 0006 8022     		mov	r2, #128
  39 0008 9203     		lsl	r2, r2, #14
  40 000a 5A60     		str	r2, [r3, #4]
  13:../Sources/main.c ****     TFC_SetServo(0,-.15);
  41              		.loc 1 13 0
  42 000c 0E4B     		ldr	r3, .L2+4
  43 000e 0020     		mov	r0, #0
  44 0010 191C     		add	r1, r3, #0
  45 0012 FFF7FEFF 		bl	TFC_SetServo
  14:../Sources/main.c ****     TFC_SetMotorPWM(1,1);
  46              		.loc 1 14 0
  47 0016 FE22     		mov	r2, #254
  48 0018 9205     		lsl	r2, r2, #22
  49 001a FE23     		mov	r3, #254
  50 001c 9B05     		lsl	r3, r3, #22
  51 001e 101C     		add	r0, r2, #0
  52 0020 191C     		add	r1, r3, #0
  53 0022 FFF7FEFF 		bl	TFC_SetMotorPWM
  15:../Sources/main.c ****     delay(30);
  54              		.loc 1 15 0
  55 0026 1E20     		mov	r0, #30
  56 0028 FFF7FEFF 		bl	delay
  16:../Sources/main.c ****     TFC_SetMotorPWM(0,0);
  57              		.loc 1 16 0
  58 002c 0022     		mov	r2, #0
  59 002e 0023     		mov	r3, #0
  60 0030 101C     		add	r0, r2, #0
  61 0032 191C     		add	r1, r3, #0
  62 0034 FFF7FEFF 		bl	TFC_SetMotorPWM
  17:../Sources/main.c ****     TFC_HBRIDGE_DISABLE;
  63              		.loc 1 17 0
  64 0038 024B     		ldr	r3, .L2
  65 003a 8022     		mov	r2, #128
  66 003c 9203     		lsl	r2, r2, #14
  67 003e 9A60     		str	r2, [r3, #8]
  18:../Sources/main.c **** }
  68              		.loc 1 18 0
  69 0040 BD46     		mov	sp, r7
  70              		@ sp needed for prologue
  71 0042 80BD     		pop	{r7, pc}
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0044 00F10F40 		.word	1074786560
  76 0048 9A9919BE 		.word	-1105618534
  77              		.cfi_endproc
  78              	.LFE0:
  80              		.section	.rodata
  81              		.align	2
  82              	.LC1:
  83 0000 0D00     		.ascii	"\015\000"
  84 0002 0000     		.align	2
  85              	.LC3:
  86 0004 4C3A00   		.ascii	"L:\000"
  87 0007 00       		.align	2
  88              	.LC6:
  89 0008 255800   		.ascii	"%X\000"
  90              		.section	.text.printCamera,"ax",%progbits
  91              		.align	2
  92              		.global	printCamera
  93              		.code	16
  94              		.thumb_func
  96              	printCamera:
  97              	.LFB1:
  19:../Sources/main.c **** 
  20:../Sources/main.c **** void printCamera() {
  98              		.loc 1 20 0
  99              		.cfi_startproc
 100 0000 80B5     		push	{r7, lr}
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 82B0     		sub	sp, sp, #8
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 16
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 7
  21:../Sources/main.c ****     int t = 0;
 111              		.loc 1 21 0
 112 0006 0023     		mov	r3, #0
 113 0008 7B60     		str	r3, [r7, #4]
 114 000a 00E0     		b	.L12
 115              	.L13:
  22:../Sources/main.c **** 
  23:../Sources/main.c ****     while(1){
  24:../Sources/main.c ****         TFC_Task();
  25:../Sources/main.c ****         if(LineScanImageReady == 1) {
  26:../Sources/main.c ****             LineScanImageReady = 0;
  27:../Sources/main.c ****             printf("\r\n");
  28:../Sources/main.c ****             printf("L:");
  29:../Sources/main.c ****             if(t == 0)
  30:../Sources/main.c ****                 t = 3;
  31:../Sources/main.c ****             else
  32:../Sources/main.c ****                 t--;
  33:../Sources/main.c **** 
  34:../Sources/main.c ****             TFC_SetBatteryLED_Level(t);
  35:../Sources/main.c **** 
  36:../Sources/main.c ****             int i;
  37:../Sources/main.c ****             for(i = 0; i < 128; i++)
  38:../Sources/main.c ****             {
  39:../Sources/main.c ****                 printf("%X", LineScanImage0[i]);
  40:../Sources/main.c ****                 if(i == 127)
  41:../Sources/main.c ****                     printf("\r\n");
  42:../Sources/main.c ****                 else
  43:../Sources/main.c ****                     printf(",");
  44:../Sources/main.c ****             }
  45:../Sources/main.c ****         }
  46:../Sources/main.c ****     }
 116              		.loc 1 46 0
 117 000c C046     		mov	r8, r8
 118              	.L12:
  24:../Sources/main.c ****         TFC_Task();
 119              		.loc 1 24 0
 120 000e FFF7FEFF 		bl	TFC_Task
  25:../Sources/main.c ****         if(LineScanImageReady == 1) {
 121              		.loc 1 25 0
 122 0012 1F4B     		ldr	r3, .L14
 123 0014 1B78     		ldrb	r3, [r3]
 124 0016 DBB2     		uxtb	r3, r3
 125 0018 012B     		cmp	r3, #1
 126 001a F7D1     		bne	.L13
 127              	.LBB2:
  26:../Sources/main.c ****             LineScanImageReady = 0;
 128              		.loc 1 26 0
 129 001c 1C4B     		ldr	r3, .L14
 130 001e 0022     		mov	r2, #0
 131 0020 1A70     		strb	r2, [r3]
  27:../Sources/main.c ****             printf("\r\n");
 132              		.loc 1 27 0
 133 0022 1C4B     		ldr	r3, .L14+4
 134 0024 181C     		mov	r0, r3
 135 0026 FFF7FEFF 		bl	puts
  28:../Sources/main.c ****             printf("L:");
 136              		.loc 1 28 0
 137 002a 1B4B     		ldr	r3, .L14+8
 138 002c 181C     		mov	r0, r3
 139 002e FFF7FEFF 		bl	printf
  29:../Sources/main.c ****             if(t == 0)
 140              		.loc 1 29 0
 141 0032 7B68     		ldr	r3, [r7, #4]
 142 0034 002B     		cmp	r3, #0
 143 0036 02D1     		bne	.L6
  30:../Sources/main.c ****                 t = 3;
 144              		.loc 1 30 0
 145 0038 0323     		mov	r3, #3
 146 003a 7B60     		str	r3, [r7, #4]
 147 003c 02E0     		b	.L7
 148              	.L6:
  32:../Sources/main.c ****                 t--;
 149              		.loc 1 32 0
 150 003e 7B68     		ldr	r3, [r7, #4]
 151 0040 013B     		sub	r3, r3, #1
 152 0042 7B60     		str	r3, [r7, #4]
 153              	.L7:
  34:../Sources/main.c ****             TFC_SetBatteryLED_Level(t);
 154              		.loc 1 34 0
 155 0044 7B68     		ldr	r3, [r7, #4]
 156 0046 DBB2     		uxtb	r3, r3
 157 0048 181C     		mov	r0, r3
 158 004a FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  37:../Sources/main.c ****             for(i = 0; i < 128; i++)
 159              		.loc 1 37 0
 160 004e 0023     		mov	r3, #0
 161 0050 3B60     		str	r3, [r7]
 162 0052 19E0     		b	.L8
 163              	.L11:
  39:../Sources/main.c ****                 printf("%X", LineScanImage0[i]);
 164              		.loc 1 39 0
 165 0054 114B     		ldr	r3, .L14+12
 166 0056 1A68     		ldr	r2, [r3]
 167 0058 3B68     		ldr	r3, [r7]
 168 005a 5B00     		lsl	r3, r3, #1
 169 005c D318     		add	r3, r2, r3
 170 005e 1B88     		ldrh	r3, [r3]
 171 0060 9BB2     		uxth	r3, r3
 172 0062 0F4A     		ldr	r2, .L14+16
 173 0064 101C     		mov	r0, r2
 174 0066 191C     		mov	r1, r3
 175 0068 FFF7FEFF 		bl	printf
  40:../Sources/main.c ****                 if(i == 127)
 176              		.loc 1 40 0
 177 006c 3B68     		ldr	r3, [r7]
 178 006e 7F2B     		cmp	r3, #127
 179 0070 04D1     		bne	.L9
  41:../Sources/main.c ****                     printf("\r\n");
 180              		.loc 1 41 0
 181 0072 084B     		ldr	r3, .L14+4
 182 0074 181C     		mov	r0, r3
 183 0076 FFF7FEFF 		bl	puts
 184 007a 02E0     		b	.L10
 185              	.L9:
  43:../Sources/main.c ****                     printf(",");
 186              		.loc 1 43 0
 187 007c 2C20     		mov	r0, #44
 188 007e FFF7FEFF 		bl	putchar
 189              	.L10:
  37:../Sources/main.c ****             for(i = 0; i < 128; i++)
 190              		.loc 1 37 0
 191 0082 3B68     		ldr	r3, [r7]
 192 0084 0133     		add	r3, r3, #1
 193 0086 3B60     		str	r3, [r7]
 194              	.L8:
  37:../Sources/main.c ****             for(i = 0; i < 128; i++)
 195              		.loc 1 37 0 is_stmt 0
 196 0088 3B68     		ldr	r3, [r7]
 197 008a 7F2B     		cmp	r3, #127
 198 008c E2DD     		ble	.L11
 199              	.LBE2:
 200              		.loc 1 46 0 is_stmt 1
 201 008e BDE7     		b	.L13
 202              	.L15:
 203              		.align	2
 204              	.L14:
 205 0090 00000000 		.word	LineScanImageReady
 206 0094 00000000 		.word	.LC1
 207 0098 04000000 		.word	.LC3
 208 009c 00000000 		.word	LineScanImage0
 209 00a0 08000000 		.word	.LC6
 210              		.cfi_endproc
 211              	.LFE1:
 213              		.global	__aeabi_idiv
 214              		.section	.rodata
 215 000b 00       		.align	2
 216              	.LC10:
 217 000c 0A255800 		.ascii	"\012%X\000"
 218              		.section	.text.runToLine,"ax",%progbits
 219              		.align	2
 220              		.global	runToLine
 221              		.code	16
 222              		.thumb_func
 224              	runToLine:
 225              	.LFB2:
  47:../Sources/main.c **** }
  48:../Sources/main.c **** 
  49:../Sources/main.c **** 
  50:../Sources/main.c **** void runToLine(){
 226              		.loc 1 50 0
 227              		.cfi_startproc
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI5:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 84B0     		sub	sp, sp, #16
 234              	.LCFI6:
 235              		.cfi_def_cfa_offset 24
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI7:
 238              		.cfi_def_cfa_register 7
  51:../Sources/main.c **** 
  52:../Sources/main.c ****     long int sum;
  53:../Sources/main.c ****     int avg = 0;
 239              		.loc 1 53 0
 240 0006 0023     		mov	r3, #0
 241 0008 BB60     		str	r3, [r7, #8]
 242              	.L21:
  54:../Sources/main.c ****     int i;
  55:../Sources/main.c **** 
  56:../Sources/main.c **** 
  57:../Sources/main.c **** 
  58:../Sources/main.c ****     while(1){
  59:../Sources/main.c ****         TFC_Task();
 243              		.loc 1 59 0
 244 000a FFF7FEFF 		bl	TFC_Task
  60:../Sources/main.c ****         sum = 0;
 245              		.loc 1 60 0
 246 000e 0023     		mov	r3, #0
 247 0010 FB60     		str	r3, [r7, #12]
  61:../Sources/main.c ****         TFC_SetServo(0,-.15);
 248              		.loc 1 61 0
 249 0012 214B     		ldr	r3, .L23
 250 0014 0020     		mov	r0, #0
 251 0016 191C     		add	r1, r3, #0
 252 0018 FFF7FEFF 		bl	TFC_SetServo
  62:../Sources/main.c ****         if( LineScanImageReady == 1 ){
 253              		.loc 1 62 0
 254 001c 1F4B     		ldr	r3, .L23+4
 255 001e 1B78     		ldrb	r3, [r3]
 256 0020 DBB2     		uxtb	r3, r3
 257 0022 012B     		cmp	r3, #1
 258 0024 1CD1     		bne	.L17
  63:../Sources/main.c ****             LineScanImageReady = 0;
 259              		.loc 1 63 0
 260 0026 1D4B     		ldr	r3, .L23+4
 261 0028 0022     		mov	r2, #0
 262 002a 1A70     		strb	r2, [r3]
  64:../Sources/main.c **** 
  65:../Sources/main.c ****             //Adds each pixels light value to the total
  66:../Sources/main.c ****             for( i = START_PIXEL; i < STOP_PIXEL; i++ ){
 263              		.loc 1 66 0
 264 002c 0A23     		mov	r3, #10
 265 002e 7B60     		str	r3, [r7, #4]
 266 0030 0CE0     		b	.L18
 267              	.L19:
  67:../Sources/main.c ****                 sum += LineScanImage0[i];
 268              		.loc 1 67 0
 269 0032 1B4B     		ldr	r3, .L23+8
 270 0034 1A68     		ldr	r2, [r3]
 271 0036 7B68     		ldr	r3, [r7, #4]
 272 0038 5B00     		lsl	r3, r3, #1
 273 003a D318     		add	r3, r2, r3
 274 003c 1B88     		ldrh	r3, [r3]
 275 003e 9BB2     		uxth	r3, r3
 276 0040 FA68     		ldr	r2, [r7, #12]
 277 0042 D318     		add	r3, r2, r3
 278 0044 FB60     		str	r3, [r7, #12]
  66:../Sources/main.c ****             for( i = START_PIXEL; i < STOP_PIXEL; i++ ){
 279              		.loc 1 66 0
 280 0046 7B68     		ldr	r3, [r7, #4]
 281 0048 0133     		add	r3, r3, #1
 282 004a 7B60     		str	r3, [r7, #4]
 283              	.L18:
  66:../Sources/main.c ****             for( i = START_PIXEL; i < STOP_PIXEL; i++ ){
 284              		.loc 1 66 0 is_stmt 0
 285 004c 7B68     		ldr	r3, [r7, #4]
 286 004e 752B     		cmp	r3, #117
 287 0050 EFDD     		ble	.L19
  68:../Sources/main.c ****             }
  69:../Sources/main.c **** 
  70:../Sources/main.c ****             //Calculates average light value
  71:../Sources/main.c ****             avg = sum / ( STOP_PIXEL - START_PIXEL );
 288              		.loc 1 71 0 is_stmt 1
 289 0052 FB68     		ldr	r3, [r7, #12]
 290 0054 181C     		mov	r0, r3
 291 0056 6C21     		mov	r1, #108
 292 0058 FFF7FEFF 		bl	__aeabi_idiv
 293 005c 031C     		mov	r3, r0
 294 005e BB60     		str	r3, [r7, #8]
 295              	.L17:
  72:../Sources/main.c ****         }
  73:../Sources/main.c ****         printf("\n%X", avg);
 296              		.loc 1 73 0
 297 0060 104A     		ldr	r2, .L23+12
 298 0062 BB68     		ldr	r3, [r7, #8]
 299 0064 101C     		mov	r0, r2
 300 0066 191C     		mov	r1, r3
 301 0068 FFF7FEFF 		bl	printf
  74:../Sources/main.c ****         if(avg>>11&&0x01){
 302              		.loc 1 74 0
 303 006c BB68     		ldr	r3, [r7, #8]
 304 006e DB12     		asr	r3, r3, #11
 305 0070 06D0     		beq	.L20
  75:../Sources/main.c ****             TFC_SetMotorPWM(.3, .3);
 306              		.loc 1 75 0
 307 0072 0D4A     		ldr	r2, .L23+16
 308 0074 0C4B     		ldr	r3, .L23+16
 309 0076 101C     		add	r0, r2, #0
 310 0078 191C     		add	r1, r3, #0
 311 007a FFF7FEFF 		bl	TFC_SetMotorPWM
  76:../Sources/main.c ****         }
  77:../Sources/main.c ****         else{
  78:../Sources/main.c ****             TFC_SetMotorPWM(0, 0);
  79:../Sources/main.c ****             TFC_HBRIDGE_DISABLE;
  80:../Sources/main.c ****             while(1);
  81:../Sources/main.c ****         }
  82:../Sources/main.c ****     }
 312              		.loc 1 82 0
 313 007e C4E7     		b	.L21
 314              	.L20:
  78:../Sources/main.c ****             TFC_SetMotorPWM(0, 0);
 315              		.loc 1 78 0
 316 0080 0022     		mov	r2, #0
 317 0082 0023     		mov	r3, #0
 318 0084 101C     		add	r0, r2, #0
 319 0086 191C     		add	r1, r3, #0
 320 0088 FFF7FEFF 		bl	TFC_SetMotorPWM
  79:../Sources/main.c ****             TFC_HBRIDGE_DISABLE;
 321              		.loc 1 79 0
 322 008c 074B     		ldr	r3, .L23+20
 323 008e 8022     		mov	r2, #128
 324 0090 9203     		lsl	r2, r2, #14
 325 0092 9A60     		str	r2, [r3, #8]
 326              	.L22:
  80:../Sources/main.c ****             while(1);
 327              		.loc 1 80 0
 328 0094 FEE7     		b	.L22
 329              	.L24:
 330 0096 C046     		.align	2
 331              	.L23:
 332 0098 9A9919BE 		.word	-1105618534
 333 009c 00000000 		.word	LineScanImageReady
 334 00a0 00000000 		.word	LineScanImage0
 335 00a4 0C000000 		.word	.LC10
 336 00a8 9A99993E 		.word	1050253722
 337 00ac 00F10F40 		.word	1074786560
 338              		.cfi_endproc
 339              	.LFE2:
 341              		.section	.text.main,"ax",%progbits
 342              		.align	2
 343              		.global	main
 344              		.code	16
 345              		.thumb_func
 347              	main:
 348              	.LFB3:
  83:../Sources/main.c **** }
  84:../Sources/main.c **** 
  85:../Sources/main.c **** int main(void){
 349              		.loc 1 85 0
 350              		.cfi_startproc
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI8:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 00AF     		add	r7, sp, #0
 357              	.LCFI9:
 358              		.cfi_def_cfa_register 7
  86:../Sources/main.c ****     TFC_Init();
 359              		.loc 1 86 0
 360 0004 FFF7FEFF 		bl	TFC_Init
  87:../Sources/main.c ****     TFC_SetMotorPWM(0, 0);
 361              		.loc 1 87 0
 362 0008 0022     		mov	r2, #0
 363 000a 0023     		mov	r3, #0
 364 000c 101C     		add	r0, r2, #0
 365 000e 191C     		add	r1, r3, #0
 366 0010 FFF7FEFF 		bl	TFC_SetMotorPWM
  88:../Sources/main.c ****     TFC_HBRIDGE_DISABLE;
 367              		.loc 1 88 0
 368 0014 7A4B     		ldr	r3, .L45
 369 0016 8022     		mov	r2, #128
 370 0018 9203     		lsl	r2, r2, #14
 371 001a 9A60     		str	r2, [r3, #8]
  89:../Sources/main.c **** 
  90:../Sources/main.c ****     /* After power on, Wait for a button press before doing anything.
  91:../Sources/main.c ****      * This gives us time to set the DIP switches and etc */
  92:../Sources/main.c ****     TFC_BAT_LED0_ON; // These lights will indicate that we're waiting
 372              		.loc 1 92 0
 373 001c 794B     		ldr	r3, .L45+4
 374 001e 8022     		mov	r2, #128
 375 0020 5200     		lsl	r2, r2, #1
 376 0022 5A60     		str	r2, [r3, #4]
  93:../Sources/main.c ****     TFC_BAT_LED1_ON;
 377              		.loc 1 93 0
 378 0024 774B     		ldr	r3, .L45+4
 379 0026 8022     		mov	r2, #128
 380 0028 9200     		lsl	r2, r2, #2
 381 002a 5A60     		str	r2, [r3, #4]
  94:../Sources/main.c ****     TFC_BAT_LED2_ON;
 382              		.loc 1 94 0
 383 002c 754B     		ldr	r3, .L45+4
 384 002e 8022     		mov	r2, #128
 385 0030 D200     		lsl	r2, r2, #3
 386 0032 5A60     		str	r2, [r3, #4]
  95:../Sources/main.c ****     TFC_BAT_LED3_ON;
 387              		.loc 1 95 0
 388 0034 734B     		ldr	r3, .L45+4
 389 0036 8022     		mov	r2, #128
 390 0038 1201     		lsl	r2, r2, #4
 391 003a 5A60     		str	r2, [r3, #4]
  96:../Sources/main.c ****     while(!TFC_PUSH_BUTTON_0_PRESSED);
 392              		.loc 1 96 0
 393 003c C046     		mov	r8, r8
 394              	.L26:
 395              		.loc 1 96 0 is_stmt 0
 396 003e 724B     		ldr	r3, .L45+8
 397 0040 1A69     		ldr	r2, [r3, #16]
 398 0042 8023     		mov	r3, #128
 399 0044 9B01     		lsl	r3, r3, #6
 400 0046 1340     		and	r3, r2
 401 0048 F9D0     		beq	.L26
  97:../Sources/main.c **** 
  98:../Sources/main.c ****     /* Then set the operating mode based on the DIP switch */
  99:../Sources/main.c ****     switch(TFC_GetDIP_Switch()&0x07) {
 402              		.loc 1 99 0 is_stmt 1
 403 004a FFF7FEFF 		bl	TFC_GetDIP_Switch
 404 004e 031C     		mov	r3, r0
 405 0050 1A1C     		mov	r2, r3
 406 0052 0723     		mov	r3, #7
 407 0054 1340     		and	r3, r2
 408 0056 052B     		cmp	r3, #5
 409 0058 04D8     		bhi	.L27
 410 005a 9A00     		lsl	r2, r3, #2
 411 005c 6B4B     		ldr	r3, .L45+12
 412 005e D318     		add	r3, r2, r3
 413 0060 1B68     		ldr	r3, [r3]
 414 0062 9F46     		mov	pc, r3
 415              		.section	.rodata.main,"a",%progbits
 416              		.align	2
 417              	.L33:
 418 0000 64000000 		.word	.L27
 419 0004 8A000000 		.word	.L28
 420 0008 BC000000 		.word	.L29
 421 000c EC000000 		.word	.L30
 422 0010 1A010000 		.word	.L31
 423 0014 6A010000 		.word	.L32
 424              		.section	.text.main
 425              	.L27:
 100:../Sources/main.c ****         default:
 101:../Sources/main.c ****         case 0:
 102:../Sources/main.c ****         	TFC_BAT_LED0_OFF;
 426              		.loc 1 102 0
 427 0064 674B     		ldr	r3, .L45+4
 428 0066 8022     		mov	r2, #128
 429 0068 5200     		lsl	r2, r2, #1
 430 006a 9A60     		str	r2, [r3, #8]
 103:../Sources/main.c ****             TFC_BAT_LED1_OFF;
 431              		.loc 1 103 0
 432 006c 654B     		ldr	r3, .L45+4
 433 006e 8022     		mov	r2, #128
 434 0070 9200     		lsl	r2, r2, #2
 435 0072 9A60     		str	r2, [r3, #8]
 104:../Sources/main.c ****             TFC_BAT_LED2_OFF;
 436              		.loc 1 104 0
 437 0074 634B     		ldr	r3, .L45+4
 438 0076 8022     		mov	r2, #128
 439 0078 D200     		lsl	r2, r2, #3
 440 007a 9A60     		str	r2, [r3, #8]
 105:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 441              		.loc 1 105 0
 442 007c 614B     		ldr	r3, .L45+4
 443 007e 8022     		mov	r2, #128
 444 0080 1201     		lsl	r2, r2, #4
 445 0082 9A60     		str	r2, [r3, #8]
 106:../Sources/main.c ****             // In the default mode, simply read out the camera forever
 107:../Sources/main.c ****             printCamera();
 446              		.loc 1 107 0
 447 0084 FFF7FEFF 		bl	printCamera
 108:../Sources/main.c ****             break;
 448              		.loc 1 108 0
 449 0088 97E0     		b	.L34
 450              	.L28:
 109:../Sources/main.c ****         case 1:
 110:../Sources/main.c ****             TFC_BAT_LED0_ON;
 451              		.loc 1 110 0
 452 008a 5E4B     		ldr	r3, .L45+4
 453 008c 8022     		mov	r2, #128
 454 008e 5200     		lsl	r2, r2, #1
 455 0090 5A60     		str	r2, [r3, #4]
 111:../Sources/main.c ****             TFC_BAT_LED1_OFF;
 456              		.loc 1 111 0
 457 0092 5C4B     		ldr	r3, .L45+4
 458 0094 8022     		mov	r2, #128
 459 0096 9200     		lsl	r2, r2, #2
 460 0098 9A60     		str	r2, [r3, #8]
 112:../Sources/main.c ****             TFC_BAT_LED2_OFF;
 461              		.loc 1 112 0
 462 009a 5A4B     		ldr	r3, .L45+4
 463 009c 8022     		mov	r2, #128
 464 009e D200     		lsl	r2, r2, #3
 465 00a0 9A60     		str	r2, [r3, #8]
 113:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 466              		.loc 1 113 0
 467 00a2 584B     		ldr	r3, .L45+4
 468 00a4 8022     		mov	r2, #128
 469 00a6 1201     		lsl	r2, r2, #4
 470 00a8 9A60     		str	r2, [r3, #8]
 114:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 471              		.loc 1 114 0
 472 00aa 554B     		ldr	r3, .L45
 473 00ac 8022     		mov	r2, #128
 474 00ae 9203     		lsl	r2, r2, #14
 475 00b0 5A60     		str	r2, [r3, #4]
 476              	.L35:
 115:../Sources/main.c ****             // In this mode, we will actually run the analysis and drive.
 116:../Sources/main.c ****             while(1) {
 117:../Sources/main.c ****                 TFC_Task();
 477              		.loc 1 117 0
 478 00b2 FFF7FEFF 		bl	TFC_Task
 118:../Sources/main.c ****                 algo_one();
 479              		.loc 1 118 0
 480 00b6 FFF7FEFF 		bl	algo_one
 119:../Sources/main.c ****             }
 481              		.loc 1 119 0
 482 00ba FAE7     		b	.L35
 483              	.L29:
 120:../Sources/main.c ****             break;
 121:../Sources/main.c ****         case 2:
 122:../Sources/main.c ****             // In this mode, we drive forward a little bit.
 123:../Sources/main.c ****         	TFC_BAT_LED0_OFF;
 484              		.loc 1 123 0
 485 00bc 514B     		ldr	r3, .L45+4
 486 00be 8022     		mov	r2, #128
 487 00c0 5200     		lsl	r2, r2, #1
 488 00c2 9A60     		str	r2, [r3, #8]
 124:../Sources/main.c ****         	TFC_BAT_LED1_ON;
 489              		.loc 1 124 0
 490 00c4 4F4B     		ldr	r3, .L45+4
 491 00c6 8022     		mov	r2, #128
 492 00c8 9200     		lsl	r2, r2, #2
 493 00ca 5A60     		str	r2, [r3, #4]
 125:../Sources/main.c ****             TFC_BAT_LED2_OFF;
 494              		.loc 1 125 0
 495 00cc 4D4B     		ldr	r3, .L45+4
 496 00ce 8022     		mov	r2, #128
 497 00d0 D200     		lsl	r2, r2, #3
 498 00d2 9A60     		str	r2, [r3, #8]
 126:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 499              		.loc 1 126 0
 500 00d4 4B4B     		ldr	r3, .L45+4
 501 00d6 8022     		mov	r2, #128
 502 00d8 1201     		lsl	r2, r2, #4
 503 00da 9A60     		str	r2, [r3, #8]
 127:../Sources/main.c ****             delay(300);
 504              		.loc 1 127 0
 505 00dc 9623     		mov	r3, #150
 506 00de 5B00     		lsl	r3, r3, #1
 507 00e0 181C     		mov	r0, r3
 508 00e2 FFF7FEFF 		bl	delay
 128:../Sources/main.c ****             forwardFull();
 509              		.loc 1 128 0
 510 00e6 FFF7FEFF 		bl	forwardFull
 129:../Sources/main.c ****             break;
 511              		.loc 1 129 0
 512 00ea 66E0     		b	.L34
 513              	.L30:
 130:../Sources/main.c ****         case 3:
 131:../Sources/main.c ****             // In this mode, we drive forward until the input is below a threshold
 132:../Sources/main.c ****             TFC_BAT_LED0_ON;
 514              		.loc 1 132 0
 515 00ec 454B     		ldr	r3, .L45+4
 516 00ee 8022     		mov	r2, #128
 517 00f0 5200     		lsl	r2, r2, #1
 518 00f2 5A60     		str	r2, [r3, #4]
 133:../Sources/main.c ****             TFC_BAT_LED1_ON;
 519              		.loc 1 133 0
 520 00f4 434B     		ldr	r3, .L45+4
 521 00f6 8022     		mov	r2, #128
 522 00f8 9200     		lsl	r2, r2, #2
 523 00fa 5A60     		str	r2, [r3, #4]
 134:../Sources/main.c ****             TFC_BAT_LED2_OFF;
 524              		.loc 1 134 0
 525 00fc 414B     		ldr	r3, .L45+4
 526 00fe 8022     		mov	r2, #128
 527 0100 D200     		lsl	r2, r2, #3
 528 0102 9A60     		str	r2, [r3, #8]
 135:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 529              		.loc 1 135 0
 530 0104 3F4B     		ldr	r3, .L45+4
 531 0106 8022     		mov	r2, #128
 532 0108 1201     		lsl	r2, r2, #4
 533 010a 9A60     		str	r2, [r3, #8]
 136:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 534              		.loc 1 136 0
 535 010c 3C4B     		ldr	r3, .L45
 536 010e 8022     		mov	r2, #128
 537 0110 9203     		lsl	r2, r2, #14
 538 0112 5A60     		str	r2, [r3, #4]
 137:../Sources/main.c ****             runToLine();
 539              		.loc 1 137 0
 540 0114 FFF7FEFF 		bl	runToLine
 138:../Sources/main.c ****             break;
 541              		.loc 1 138 0
 542 0118 4FE0     		b	.L34
 543              	.L31:
 139:../Sources/main.c ****         case 4:
 140:../Sources/main.c ****             TFC_BAT_LED0_OFF;
 544              		.loc 1 140 0
 545 011a 3A4B     		ldr	r3, .L45+4
 546 011c 8022     		mov	r2, #128
 547 011e 5200     		lsl	r2, r2, #1
 548 0120 9A60     		str	r2, [r3, #8]
 141:../Sources/main.c ****             TFC_BAT_LED1_OFF;
 549              		.loc 1 141 0
 550 0122 384B     		ldr	r3, .L45+4
 551 0124 8022     		mov	r2, #128
 552 0126 9200     		lsl	r2, r2, #2
 553 0128 9A60     		str	r2, [r3, #8]
 142:../Sources/main.c ****             TFC_BAT_LED2_ON;
 554              		.loc 1 142 0
 555 012a 364B     		ldr	r3, .L45+4
 556 012c 8022     		mov	r2, #128
 557 012e D200     		lsl	r2, r2, #3
 558 0130 5A60     		str	r2, [r3, #4]
 143:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 559              		.loc 1 143 0
 560 0132 344B     		ldr	r3, .L45+4
 561 0134 8022     		mov	r2, #128
 562 0136 1201     		lsl	r2, r2, #4
 563 0138 9A60     		str	r2, [r3, #8]
 144:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 564              		.loc 1 144 0
 565 013a 314B     		ldr	r3, .L45
 566 013c 8022     		mov	r2, #128
 567 013e 9203     		lsl	r2, r2, #14
 568 0140 5A60     		str	r2, [r3, #4]
 569 0142 00E0     		b	.L38
 570              	.L43:
 145:../Sources/main.c ****             while(1) {
 146:../Sources/main.c ****                 TFC_Task();
 147:../Sources/main.c ****                 algo_two();
 148:../Sources/main.c ****                 TFC_SetMotorPWM(.3, .3);
 149:../Sources/main.c ****                 if(TFC_PUSH_BUTTON_1_PRESSED)break;
 150:../Sources/main.c ****             }
 571              		.loc 1 150 0
 572 0144 C046     		mov	r8, r8
 573              	.L38:
 146:../Sources/main.c ****                 TFC_Task();
 574              		.loc 1 146 0
 575 0146 FFF7FEFF 		bl	TFC_Task
 147:../Sources/main.c ****                 algo_two();
 576              		.loc 1 147 0
 577 014a FFF7FEFF 		bl	algo_two
 148:../Sources/main.c ****                 TFC_SetMotorPWM(.3, .3);
 578              		.loc 1 148 0
 579 014e 304A     		ldr	r2, .L45+16
 580 0150 2F4B     		ldr	r3, .L45+16
 581 0152 101C     		add	r0, r2, #0
 582 0154 191C     		add	r1, r3, #0
 583 0156 FFF7FEFF 		bl	TFC_SetMotorPWM
 149:../Sources/main.c ****                 if(TFC_PUSH_BUTTON_1_PRESSED)break;
 584              		.loc 1 149 0
 585 015a 2B4B     		ldr	r3, .L45+8
 586 015c 1A69     		ldr	r2, [r3, #16]
 587 015e 8023     		mov	r3, #128
 588 0160 9B02     		lsl	r3, r3, #10
 589 0162 1340     		and	r3, r2
 590 0164 EED0     		beq	.L43
 591 0166 C046     		mov	r8, r8
 151:../Sources/main.c **** 
 152:../Sources/main.c ****             break;
 592              		.loc 1 152 0
 593 0168 27E0     		b	.L34
 594              	.L32:
 153:../Sources/main.c ****         case 5:
 154:../Sources/main.c ****             TFC_BAT_LED0_ON;
 595              		.loc 1 154 0
 596 016a 264B     		ldr	r3, .L45+4
 597 016c 8022     		mov	r2, #128
 598 016e 5200     		lsl	r2, r2, #1
 599 0170 5A60     		str	r2, [r3, #4]
 155:../Sources/main.c ****             TFC_BAT_LED1_OFF;
 600              		.loc 1 155 0
 601 0172 244B     		ldr	r3, .L45+4
 602 0174 8022     		mov	r2, #128
 603 0176 9200     		lsl	r2, r2, #2
 604 0178 9A60     		str	r2, [r3, #8]
 156:../Sources/main.c ****             TFC_BAT_LED2_ON;
 605              		.loc 1 156 0
 606 017a 224B     		ldr	r3, .L45+4
 607 017c 8022     		mov	r2, #128
 608 017e D200     		lsl	r2, r2, #3
 609 0180 5A60     		str	r2, [r3, #4]
 157:../Sources/main.c ****             TFC_BAT_LED3_OFF;
 610              		.loc 1 157 0
 611 0182 204B     		ldr	r3, .L45+4
 612 0184 8022     		mov	r2, #128
 613 0186 1201     		lsl	r2, r2, #4
 614 0188 9A60     		str	r2, [r3, #8]
 158:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 615              		.loc 1 158 0
 616 018a 1D4B     		ldr	r3, .L45
 617 018c 8022     		mov	r2, #128
 618 018e 9203     		lsl	r2, r2, #14
 619 0190 5A60     		str	r2, [r3, #4]
 620 0192 00E0     		b	.L41
 621              	.L44:
 159:../Sources/main.c ****             while(1) {
 160:../Sources/main.c ****                 TFC_Task();
 161:../Sources/main.c ****                 algo_three();
 162:../Sources/main.c ****                 TFC_SetMotorPWM(0.3, 0.3);
 163:../Sources/main.c ****                 if(TFC_PUSH_BUTTON_1_PRESSED) break;
 164:../Sources/main.c ****             }
 622              		.loc 1 164 0
 623 0194 C046     		mov	r8, r8
 624              	.L41:
 625              	.LBB3:
 160:../Sources/main.c ****                 TFC_Task();
 626              		.loc 1 160 0
 627 0196 FFF7FEFF 		bl	TFC_Task
 161:../Sources/main.c ****                 algo_three();
 628              		.loc 1 161 0
 629 019a FFF7FEFF 		bl	algo_three
 162:../Sources/main.c ****                 TFC_SetMotorPWM(0.3, 0.3);
 630              		.loc 1 162 0
 631 019e 1C4A     		ldr	r2, .L45+16
 632 01a0 1B4B     		ldr	r3, .L45+16
 633 01a2 101C     		add	r0, r2, #0
 634 01a4 191C     		add	r1, r3, #0
 635 01a6 FFF7FEFF 		bl	TFC_SetMotorPWM
 163:../Sources/main.c ****                 if(TFC_PUSH_BUTTON_1_PRESSED) break;
 636              		.loc 1 163 0
 637 01aa 174B     		ldr	r3, .L45+8
 638 01ac 1A69     		ldr	r2, [r3, #16]
 639 01ae 8023     		mov	r3, #128
 640 01b0 9B02     		lsl	r3, r3, #10
 641 01b2 1340     		and	r3, r2
 642 01b4 EED0     		beq	.L44
 643 01b6 C046     		mov	r8, r8
 644              	.LBE3:
 165:../Sources/main.c **** 
 166:../Sources/main.c ****             break;
 645              		.loc 1 166 0
 646 01b8 C046     		mov	r8, r8
 647              	.L34:
 167:../Sources/main.c ****     }
 168:../Sources/main.c **** 
 169:../Sources/main.c ****     TFC_SetServo(0,0);
 648              		.loc 1 169 0
 649 01ba 0023     		mov	r3, #0
 650 01bc 0020     		mov	r0, #0
 651 01be 191C     		add	r1, r3, #0
 652 01c0 FFF7FEFF 		bl	TFC_SetServo
 170:../Sources/main.c ****     TFC_SetMotorPWM(0, 0);
 653              		.loc 1 170 0
 654 01c4 0022     		mov	r2, #0
 655 01c6 0023     		mov	r3, #0
 656 01c8 101C     		add	r0, r2, #0
 657 01ca 191C     		add	r1, r3, #0
 658 01cc FFF7FEFF 		bl	TFC_SetMotorPWM
 171:../Sources/main.c ****     TFC_BAT_LED0_OFF;
 659              		.loc 1 171 0
 660 01d0 0C4B     		ldr	r3, .L45+4
 661 01d2 8022     		mov	r2, #128
 662 01d4 5200     		lsl	r2, r2, #1
 663 01d6 9A60     		str	r2, [r3, #8]
 172:../Sources/main.c ****     TFC_BAT_LED1_OFF;
 664              		.loc 1 172 0
 665 01d8 0A4B     		ldr	r3, .L45+4
 666 01da 8022     		mov	r2, #128
 667 01dc 9200     		lsl	r2, r2, #2
 668 01de 9A60     		str	r2, [r3, #8]
 173:../Sources/main.c ****     TFC_BAT_LED2_OFF;
 669              		.loc 1 173 0
 670 01e0 084B     		ldr	r3, .L45+4
 671 01e2 8022     		mov	r2, #128
 672 01e4 D200     		lsl	r2, r2, #3
 673 01e6 9A60     		str	r2, [r3, #8]
 174:../Sources/main.c ****     TFC_BAT_LED3_OFF;
 674              		.loc 1 174 0
 675 01e8 064B     		ldr	r3, .L45+4
 676 01ea 8022     		mov	r2, #128
 677 01ec 1201     		lsl	r2, r2, #4
 678 01ee 9A60     		str	r2, [r3, #8]
 175:../Sources/main.c ****     TFC_HBRIDGE_DISABLE;
 679              		.loc 1 175 0
 680 01f0 034B     		ldr	r3, .L45
 681 01f2 8022     		mov	r2, #128
 682 01f4 9203     		lsl	r2, r2, #14
 683 01f6 9A60     		str	r2, [r3, #8]
 176:../Sources/main.c ****     return 0;
 684              		.loc 1 176 0
 685 01f8 0023     		mov	r3, #0
 177:../Sources/main.c **** }
 686              		.loc 1 177 0
 687 01fa 181C     		mov	r0, r3
 688 01fc BD46     		mov	sp, r7
 689              		@ sp needed for prologue
 690 01fe 80BD     		pop	{r7, pc}
 691              	.L46:
 692              		.align	2
 693              	.L45:
 694 0200 00F10F40 		.word	1074786560
 695 0204 40F00F40 		.word	1074786368
 696 0208 80F00F40 		.word	1074786432
 697 020c 00000000 		.word	.L33
 698 0210 9A99993E 		.word	1050253722
 699              		.cfi_endproc
 700              	.LFE3:
 702              		.text
 703              	.Letext0:
 704              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 705              		.file 3 "C:/Users/Jared/Desktop/freescalecup/FRDM-TFC/Project_Headers/MKL25Z4.h"
 706              		.file 4 "C:/Users/Jared/Desktop/freescalecup/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:18     .text.forwardFull:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:23     .text.forwardFull:00000000 forwardFull
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:75     .text.forwardFull:00000044 $d
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:81     .rodata:00000000 $d
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:91     .text.printCamera:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:96     .text.printCamera:00000000 printCamera
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:205    .text.printCamera:00000090 $d
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:219    .text.runToLine:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:224    .text.runToLine:00000000 runToLine
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:332    .text.runToLine:00000098 $d
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:342    .text.main:00000000 $t
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:347    .text.main:00000000 main
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:416    .rodata.main:00000000 $d
C:\Users\Jared\AppData\Local\Temp\ccHy4PAU.s:694    .text.main:00000200 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_SetServo
TFC_SetMotorPWM
delay
TFC_Task
puts
printf
TFC_SetBatteryLED_Level
putchar
LineScanImageReady
LineScanImage0
__aeabi_idiv
TFC_Init
TFC_GetDIP_Switch
algo_one
algo_two
algo_three
