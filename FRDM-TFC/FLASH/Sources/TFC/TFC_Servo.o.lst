   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_Servo.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_dadd
  19              		.global	__aeabi_ddiv
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_d2f
  22              		.section	.text.TFC_SetServo,"ax",%progbits
  23              		.align	2
  24              		.global	TFC_SetServo
  25              		.code	16
  26              		.thumb_func
  28              	TFC_SetServo:
  29              	.LFB0:
  30              		.file 1 "../Sources/TFC/TFC_Servo.c"
   1:../Sources/TFC/TFC_Servo.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_Servo.c **** 
   3:../Sources/TFC/TFC_Servo.c **** 
   4:../Sources/TFC/TFC_Servo.c **** #define FTM1_CLOCK                                                                  (CORE_CLOCK)
   5:../Sources/TFC/TFC_Servo.c **** #define FTM1_CLK_PRESCALE                                  						     6// Prescale Selector value -
   6:../Sources/TFC/TFC_Servo.c **** #define FTM1_OVERFLOW_FREQUENCY 50  // Desired Frequency of PWM Signal - Here 50Hz => 20ms period
   7:../Sources/TFC/TFC_Servo.c **** // use these to dial in servo steering to your particular servo
   8:../Sources/TFC/TFC_Servo.c **** #define SERVO_MIN_DUTY_CYCLE                                          (float)(.0010*FTM1_OVERFLOW_F
   9:../Sources/TFC/TFC_Servo.c **** #define SERVO_MAX_DUTY_CYCLE                                         (float)(.0020*FTM1_OVERFLOW_FR
  10:../Sources/TFC/TFC_Servo.c **** /**********************************************************************************************/
  11:../Sources/TFC/TFC_Servo.c **** 
  12:../Sources/TFC/TFC_Servo.c **** //Position is -1.0 to 1.0.   Use SERVO_X_MIN_DUTY_CYCLE and SERVO_MAX_DUTY_CYCLE  to calibrate the 
  13:../Sources/TFC/TFC_Servo.c **** void TFC_SetServo(uint8_t ServoNumber, float Position)
  14:../Sources/TFC/TFC_Servo.c **** {
  31              		.loc 1 14 0
  32              		.cfi_startproc
  33 0000 90B5     		push	{r4, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 021C     		mov	r2, r0
  46 0008 3960     		str	r1, [r7]
  47 000a FB1D     		add	r3, r7, #7
  48 000c 1A70     		strb	r2, [r3]
  15:../Sources/TFC/TFC_Servo.c ****                               TFC_SetServoDutyCycle(ServoNumber , 
  16:../Sources/TFC/TFC_Servo.c ****                                                             (((Position + 1.0)/2)*(SERVO_MAX_DUTY_C
  49              		.loc 1 16 0
  50 000e 3868     		ldr	r0, [r7]
  51 0010 FFF7FEFF 		bl	__aeabi_f2d
  52 0014 031C     		mov	r3, r0
  53 0016 0C1C     		mov	r4, r1
  54 0018 181C     		mov	r0, r3
  55 001a 211C     		mov	r1, r4
  56 001c 174B     		ldr	r3, .L2+4
  57 001e 164A     		ldr	r2, .L2
  58 0020 FFF7FEFF 		bl	__aeabi_dadd
  59 0024 031C     		mov	r3, r0
  60 0026 0C1C     		mov	r4, r1
  61 0028 181C     		mov	r0, r3
  62 002a 211C     		mov	r1, r4
  63 002c 144A     		ldr	r2, .L2+8
  64 002e 154B     		ldr	r3, .L2+12
  65 0030 FFF7FEFF 		bl	__aeabi_ddiv
  66 0034 031C     		mov	r3, r0
  67 0036 0C1C     		mov	r4, r1
  68 0038 181C     		mov	r0, r3
  69 003a 211C     		mov	r1, r4
  70 003c 124A     		ldr	r2, .L2+16
  71 003e 134B     		ldr	r3, .L2+20
  72 0040 FFF7FEFF 		bl	__aeabi_dmul
  73 0044 031C     		mov	r3, r0
  74 0046 0C1C     		mov	r4, r1
  75 0048 181C     		mov	r0, r3
  76 004a 211C     		mov	r1, r4
  77 004c 0E4A     		ldr	r2, .L2+16
  78 004e 0F4B     		ldr	r3, .L2+20
  79 0050 FFF7FEFF 		bl	__aeabi_dadd
  80 0054 031C     		mov	r3, r0
  81 0056 0C1C     		mov	r4, r1
  15:../Sources/TFC/TFC_Servo.c ****                               TFC_SetServoDutyCycle(ServoNumber , 
  82              		.loc 1 15 0
  83 0058 181C     		mov	r0, r3
  84 005a 211C     		mov	r1, r4
  85 005c FFF7FEFF 		bl	__aeabi_d2f
  86 0060 031C     		add	r3, r0, #0
  87 0062 FA1D     		add	r2, r7, #7
  88 0064 1278     		ldrb	r2, [r2]
  89 0066 101C     		mov	r0, r2
  90 0068 191C     		add	r1, r3, #0
  91 006a FFF7FEFF 		bl	TFC_SetServoDutyCycle
  17:../Sources/TFC/TFC_Servo.c ****                
  18:../Sources/TFC/TFC_Servo.c **** }
  92              		.loc 1 18 0
  93 006e BD46     		mov	sp, r7
  94 0070 03B0     		add	sp, sp, #12
  95              		@ sp needed for prologue
  96 0072 90BD     		pop	{r4, r7, pc}
  97              	.L3:
  98 0074 C046C046 		.align	3
  99              	.L2:
 100 0078 00000000 		.word	0
 101 007c 0000F03F 		.word	1072693248
 102 0080 00000000 		.word	0
 103 0084 00000040 		.word	1073741824
 104 0088 000000A0 		.word	-1610612736
 105 008c 9999A93F 		.word	1068079513
 106              		.cfi_endproc
 107              	.LFE0:
 109              		.global	__aeabi_ui2f
 110              		.global	__aeabi_fmul
 111              		.global	__aeabi_f2uiz
 112              		.section	.text.TFC_SetServoDutyCycle,"ax",%progbits
 113              		.align	2
 114              		.global	TFC_SetServoDutyCycle
 115              		.code	16
 116              		.thumb_func
 118              	TFC_SetServoDutyCycle:
 119              	.LFB1:
  19:../Sources/TFC/TFC_Servo.c **** 
  20:../Sources/TFC/TFC_Servo.c **** void TFC_SetServoDutyCycle(uint8_t ServoNumber, float DutyCycle)
  21:../Sources/TFC/TFC_Servo.c **** {
 120              		.loc 1 21 0
 121              		.cfi_startproc
 122 0000 90B5     		push	{r4, r7, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 12
 125              		.cfi_offset 4, -12
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 83B0     		sub	sp, sp, #12
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 24
 131 0004 00AF     		add	r7, sp, #0
 132              	.LCFI5:
 133              		.cfi_def_cfa_register 7
 134 0006 021C     		mov	r2, r0
 135 0008 3960     		str	r1, [r7]
 136 000a FB1D     		add	r3, r7, #7
 137 000c 1A70     		strb	r2, [r3]
  22:../Sources/TFC/TFC_Servo.c ****                switch(ServoNumber)
 138              		.loc 1 22 0
 139 000e FB1D     		add	r3, r7, #7
 140 0010 1B78     		ldrb	r3, [r3]
 141 0012 012B     		cmp	r3, #1
 142 0014 11D0     		beq	.L6
  23:../Sources/TFC/TFC_Servo.c ****                {
  24:../Sources/TFC/TFC_Servo.c ****                default:
  25:../Sources/TFC/TFC_Servo.c ****                case 0:
  26:../Sources/TFC/TFC_Servo.c ****                               TPM1_C0V = TPM1_MOD * DutyCycle;
 143              		.loc 1 26 0
 144 0016 134C     		ldr	r4, .L8
 145 0018 124B     		ldr	r3, .L8
 146 001a 9B68     		ldr	r3, [r3, #8]
 147 001c 181C     		mov	r0, r3
 148 001e FFF7FEFF 		bl	__aeabi_ui2f
 149 0022 031C     		add	r3, r0, #0
 150 0024 181C     		add	r0, r3, #0
 151 0026 3968     		ldr	r1, [r7]
 152 0028 FFF7FEFF 		bl	__aeabi_fmul
 153 002c 031C     		add	r3, r0, #0
 154 002e 181C     		add	r0, r3, #0
 155 0030 FFF7FEFF 		bl	__aeabi_f2uiz
 156 0034 031C     		mov	r3, r0
 157 0036 2361     		str	r3, [r4, #16]
  27:../Sources/TFC/TFC_Servo.c ****                               break;
 158              		.loc 1 27 0
 159 0038 11E0     		b	.L4
 160              	.L6:
  28:../Sources/TFC/TFC_Servo.c **** 
  29:../Sources/TFC/TFC_Servo.c ****                case 1:
  30:../Sources/TFC/TFC_Servo.c ****                               TPM1_C1V = TPM1_MOD * DutyCycle;
 161              		.loc 1 30 0
 162 003a 0A4C     		ldr	r4, .L8
 163 003c 094B     		ldr	r3, .L8
 164 003e 9B68     		ldr	r3, [r3, #8]
 165 0040 181C     		mov	r0, r3
 166 0042 FFF7FEFF 		bl	__aeabi_ui2f
 167 0046 031C     		add	r3, r0, #0
 168 0048 181C     		add	r0, r3, #0
 169 004a 3968     		ldr	r1, [r7]
 170 004c FFF7FEFF 		bl	__aeabi_fmul
 171 0050 031C     		add	r3, r0, #0
 172 0052 181C     		add	r0, r3, #0
 173 0054 FFF7FEFF 		bl	__aeabi_f2uiz
 174 0058 031C     		mov	r3, r0
 175 005a A361     		str	r3, [r4, #24]
  31:../Sources/TFC/TFC_Servo.c ****                               break;
 176              		.loc 1 31 0
 177 005c C046     		mov	r8, r8
 178              	.L4:
  32:../Sources/TFC/TFC_Servo.c ****                }
  33:../Sources/TFC/TFC_Servo.c **** }
 179              		.loc 1 33 0
 180 005e BD46     		mov	sp, r7
 181 0060 03B0     		add	sp, sp, #12
 182              		@ sp needed for prologue
 183 0062 90BD     		pop	{r4, r7, pc}
 184              	.L9:
 185              		.align	2
 186              	.L8:
 187 0064 00900340 		.word	1073975296
 188              		.cfi_endproc
 189              	.LFE1:
 191              		.comm	ServoTickVar,1,1
 192              		.section	.text.FTM1_IRQHandler,"ax",%progbits
 193              		.align	2
 194              		.global	FTM1_IRQHandler
 195              		.code	16
 196              		.thumb_func
 198              	FTM1_IRQHandler:
 199              	.LFB2:
  34:../Sources/TFC/TFC_Servo.c **** 
  35:../Sources/TFC/TFC_Servo.c **** /******************************************* Function to control Interrupt ************************
  36:../Sources/TFC/TFC_Servo.c **** volatile unsigned char ServoTickVar;
  37:../Sources/TFC/TFC_Servo.c **** 
  38:../Sources/TFC/TFC_Servo.c **** void FTM1_IRQHandler()
  39:../Sources/TFC/TFC_Servo.c **** {
 200              		.loc 1 39 0
 201              		.cfi_startproc
 202 0000 80B5     		push	{r7, lr}
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              	.LCFI7:
 209              		.cfi_def_cfa_register 7
  40:../Sources/TFC/TFC_Servo.c ****                //Clear the overflow mask if set.   According to the reference manual, we clear by w
  41:../Sources/TFC/TFC_Servo.c ****                if(TPM1_SC & TPM_SC_TOF_MASK)
 210              		.loc 1 41 0
 211 0004 0C4B     		ldr	r3, .L13
 212 0006 1A68     		ldr	r2, [r3]
 213 0008 8023     		mov	r3, #128
 214 000a 1340     		and	r3, r2
 215 000c 05D0     		beq	.L11
  42:../Sources/TFC/TFC_Servo.c ****                               TPM1_SC |= TPM_SC_TOF_MASK;
 216              		.loc 1 42 0
 217 000e 0A4B     		ldr	r3, .L13
 218 0010 094A     		ldr	r2, .L13
 219 0012 1268     		ldr	r2, [r2]
 220 0014 8021     		mov	r1, #128
 221 0016 0A43     		orr	r2, r1
 222 0018 1A60     		str	r2, [r3]
 223              	.L11:
  43:../Sources/TFC/TFC_Servo.c ****                
  44:../Sources/TFC/TFC_Servo.c ****                if (ServoTickVar < 0xff)//if servo tick less than 255 count up... 
 224              		.loc 1 44 0
 225 001a 084B     		ldr	r3, .L13+4
 226 001c 1B78     		ldrb	r3, [r3]
 227 001e DBB2     		uxtb	r3, r3
 228 0020 FF2B     		cmp	r3, #255
 229 0022 06D0     		beq	.L10
  45:../Sources/TFC/TFC_Servo.c ****                               ServoTickVar++;
 230              		.loc 1 45 0
 231 0024 054B     		ldr	r3, .L13+4
 232 0026 1B78     		ldrb	r3, [r3]
 233 0028 DBB2     		uxtb	r3, r3
 234 002a 0133     		add	r3, r3, #1
 235 002c DAB2     		uxtb	r2, r3
 236 002e 034B     		ldr	r3, .L13+4
 237 0030 1A70     		strb	r2, [r3]
 238              	.L10:
  46:../Sources/TFC/TFC_Servo.c ****   
  47:../Sources/TFC/TFC_Servo.c **** }
 239              		.loc 1 47 0
 240 0032 BD46     		mov	sp, r7
 241              		@ sp needed for prologue
 242 0034 80BD     		pop	{r7, pc}
 243              	.L14:
 244 0036 C046     		.align	2
 245              	.L13:
 246 0038 00900340 		.word	1073975296
 247 003c 00000000 		.word	ServoTickVar
 248              		.cfi_endproc
 249              	.LFE2:
 251              		.section	.text.TFC_InitServos,"ax",%progbits
 252              		.align	2
 253              		.global	TFC_InitServos
 254              		.code	16
 255              		.thumb_func
 257              	TFC_InitServos:
 258              	.LFB3:
  48:../Sources/TFC/TFC_Servo.c **** 
  49:../Sources/TFC/TFC_Servo.c **** void TFC_InitServos()
  50:../Sources/TFC/TFC_Servo.c **** {
 259              		.loc 1 50 0
 260              		.cfi_startproc
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI8:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 00AF     		add	r7, sp, #0
 267              	.LCFI9:
 268              		.cfi_def_cfa_register 7
  51:../Sources/TFC/TFC_Servo.c ****                
  52:../Sources/TFC/TFC_Servo.c ****                //Clock Setup for the TPM requires a couple steps.
  53:../Sources/TFC/TFC_Servo.c ****                
  54:../Sources/TFC/TFC_Servo.c ****     
  55:../Sources/TFC/TFC_Servo.c **** 				
  56:../Sources/TFC/TFC_Servo.c ****                //1st,  set the clock mux
  57:../Sources/TFC/TFC_Servo.c ****                //See Page 124 of f the KL25 Sub-Family Reference Manual, Rev. 3, September 2012
  58:../Sources/TFC/TFC_Servo.c ****                SIM_SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK;// We Want MCGPLLCLK/2 (See Page 196 of the KL
 269              		.loc 1 58 0
 270 0004 2C4A     		ldr	r2, .L16
 271 0006 2C49     		ldr	r1, .L16
 272 0008 2C4B     		ldr	r3, .L16+4
 273 000a CB58     		ldr	r3, [r1, r3]
 274 000c 8021     		mov	r1, #128
 275 000e 4902     		lsl	r1, r1, #9
 276 0010 1943     		orr	r1, r3
 277 0012 2A4B     		ldr	r3, .L16+4
 278 0014 D150     		str	r1, [r2, r3]
  59:../Sources/TFC/TFC_Servo.c ****                SIM_SOPT2 &= ~(SIM_SOPT2_TPMSRC_MASK);
 279              		.loc 1 59 0
 280 0016 284A     		ldr	r2, .L16
 281 0018 2749     		ldr	r1, .L16
 282 001a 284B     		ldr	r3, .L16+4
 283 001c C958     		ldr	r1, [r1, r3]
 284 001e 284B     		ldr	r3, .L16+8
 285 0020 1940     		and	r1, r3
 286 0022 264B     		ldr	r3, .L16+4
 287 0024 D150     		str	r1, [r2, r3]
  60:../Sources/TFC/TFC_Servo.c ****                SIM_SOPT2 |= SIM_SOPT2_TPMSRC(1); //We want the MCGPLLCLK/2 (See Page 196 of the KL2
 288              		.loc 1 60 0
 289 0026 244A     		ldr	r2, .L16
 290 0028 2349     		ldr	r1, .L16
 291 002a 244B     		ldr	r3, .L16+4
 292 002c CB58     		ldr	r3, [r1, r3]
 293 002e 8021     		mov	r1, #128
 294 0030 4904     		lsl	r1, r1, #17
 295 0032 1943     		orr	r1, r3
 296 0034 214B     		ldr	r3, .L16+4
 297 0036 D150     		str	r1, [r2, r3]
  61:../Sources/TFC/TFC_Servo.c ****   
  62:../Sources/TFC/TFC_Servo.c **** 
  63:../Sources/TFC/TFC_Servo.c **** 				//Enable the Clock to the FTM0 Module
  64:../Sources/TFC/TFC_Servo.c **** 				//See Page 207 of f the KL25 Sub-Family Reference Manual, Rev. 3, September 2012
  65:../Sources/TFC/TFC_Servo.c **** 				SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK; 
 298              		.loc 1 65 0
 299 0038 1F4A     		ldr	r2, .L16
 300 003a 1F49     		ldr	r1, .L16
 301 003c 214B     		ldr	r3, .L16+12
 302 003e CB58     		ldr	r3, [r1, r3]
 303 0040 8021     		mov	r1, #128
 304 0042 8904     		lsl	r1, r1, #18
 305 0044 1943     		orr	r1, r3
 306 0046 1F4B     		ldr	r3, .L16+12
 307 0048 D150     		str	r1, [r2, r3]
  66:../Sources/TFC/TFC_Servo.c ****                
  67:../Sources/TFC/TFC_Servo.c ****                //The TPM Module has Clock.  Now set up the peripheral
  68:../Sources/TFC/TFC_Servo.c ****                
  69:../Sources/TFC/TFC_Servo.c ****                //Blow away the control registers to ensure that the counter is not running
  70:../Sources/TFC/TFC_Servo.c ****                TPM1_SC = 0;
 308              		.loc 1 70 0
 309 004a 1F4B     		ldr	r3, .L16+16
 310 004c 0022     		mov	r2, #0
 311 004e 1A60     		str	r2, [r3]
  71:../Sources/TFC/TFC_Servo.c ****                TPM1_CONF = 0;
 312              		.loc 1 71 0
 313 0050 1D4A     		ldr	r2, .L16+16
 314 0052 8423     		mov	r3, #132
 315 0054 0021     		mov	r1, #0
 316 0056 D150     		str	r1, [r2, r3]
  72:../Sources/TFC/TFC_Servo.c ****                
  73:../Sources/TFC/TFC_Servo.c ****                //While the counter is disabled we can setup the prescaler
  74:../Sources/TFC/TFC_Servo.c ****                
  75:../Sources/TFC/TFC_Servo.c ****                TPM1_SC = TPM_SC_PS(FTM1_CLK_PRESCALE);
 317              		.loc 1 75 0
 318 0058 1B4B     		ldr	r3, .L16+16
 319 005a 0622     		mov	r2, #6
 320 005c 1A60     		str	r2, [r3]
  76:../Sources/TFC/TFC_Servo.c ****                TPM1_SC |= TPM_SC_TOIE_MASK; //Enable Interrupts for the Timer Overflow
 321              		.loc 1 76 0
 322 005e 1A4B     		ldr	r3, .L16+16
 323 0060 194A     		ldr	r2, .L16+16
 324 0062 1268     		ldr	r2, [r2]
 325 0064 4021     		mov	r1, #64
 326 0066 0A43     		orr	r2, r1
 327 0068 1A60     		str	r2, [r3]
  77:../Sources/TFC/TFC_Servo.c ****                
  78:../Sources/TFC/TFC_Servo.c ****                //Setup the mod register to get the correct PWM Period
  79:../Sources/TFC/TFC_Servo.c ****                
  80:../Sources/TFC/TFC_Servo.c ****                TPM1_MOD = FTM1_CLOCK/(1<<(FTM1_CLK_PRESCALE+1))/FTM1_OVERFLOW_FREQUENCY;
 328              		.loc 1 80 0
 329 006a 174B     		ldr	r3, .L16+16
 330 006c 174A     		ldr	r2, .L16+20
 331 006e 9A60     		str	r2, [r3, #8]
  81:../Sources/TFC/TFC_Servo.c ****                
  82:../Sources/TFC/TFC_Servo.c ****                //Setup Channels 0 and 1
  83:../Sources/TFC/TFC_Servo.c ****                
  84:../Sources/TFC/TFC_Servo.c ****                TPM1_C0SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;
 332              		.loc 1 84 0
 333 0070 154B     		ldr	r3, .L16+16
 334 0072 2822     		mov	r2, #40
 335 0074 DA60     		str	r2, [r3, #12]
  85:../Sources/TFC/TFC_Servo.c ****                TPM1_C1SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;
 336              		.loc 1 85 0
 337 0076 144B     		ldr	r3, .L16+16
 338 0078 2822     		mov	r2, #40
 339 007a 5A61     		str	r2, [r3, #20]
  86:../Sources/TFC/TFC_Servo.c ****                
  87:../Sources/TFC/TFC_Servo.c ****                //Enable the Counter
  88:../Sources/TFC/TFC_Servo.c ****                
  89:../Sources/TFC/TFC_Servo.c ****                //Set the Default duty cycle to servo neutral
  90:../Sources/TFC/TFC_Servo.c ****                TFC_SetServo(0, 0.0);
 340              		.loc 1 90 0
 341 007c 0023     		mov	r3, #0
 342 007e 0020     		mov	r0, #0
 343 0080 191C     		add	r1, r3, #0
 344 0082 FFF7FEFF 		bl	TFC_SetServo
  91:../Sources/TFC/TFC_Servo.c ****                TFC_SetServo(1, 0.0);
 345              		.loc 1 91 0
 346 0086 0023     		mov	r3, #0
 347 0088 0120     		mov	r0, #1
 348 008a 191C     		add	r1, r3, #0
 349 008c FFF7FEFF 		bl	TFC_SetServo
  92:../Sources/TFC/TFC_Servo.c ****                
  93:../Sources/TFC/TFC_Servo.c ****                //Enable the TPM COunter
  94:../Sources/TFC/TFC_Servo.c ****                TPM1_SC |= TPM_SC_CMOD(1);
 350              		.loc 1 94 0
 351 0090 0D4B     		ldr	r3, .L16+16
 352 0092 0D4A     		ldr	r2, .L16+16
 353 0094 1268     		ldr	r2, [r2]
 354 0096 0821     		mov	r1, #8
 355 0098 0A43     		orr	r2, r1
 356 009a 1A60     		str	r2, [r3]
  95:../Sources/TFC/TFC_Servo.c ****                
  96:../Sources/TFC/TFC_Servo.c ****                //Enable TPM1 IRQ on the NVIC
  97:../Sources/TFC/TFC_Servo.c ****                enable_irq (INT_TPM1-16);
 357              		.loc 1 97 0
 358 009c 1220     		mov	r0, #18
 359 009e FFF7FEFF 		bl	enable_irq
  98:../Sources/TFC/TFC_Servo.c ****               
  99:../Sources/TFC/TFC_Servo.c ****                //Enable the FTM functions on the the port
 100:../Sources/TFC/TFC_Servo.c ****                
 101:../Sources/TFC/TFC_Servo.c ****                PORTB_PCR0 = PORT_PCR_MUX(3);
 360              		.loc 1 101 0
 361 00a2 0B4B     		ldr	r3, .L16+24
 362 00a4 C022     		mov	r2, #192
 363 00a6 9200     		lsl	r2, r2, #2
 364 00a8 1A60     		str	r2, [r3]
 102:../Sources/TFC/TFC_Servo.c ****                PORTB_PCR1 = PORT_PCR_MUX(3);
 365              		.loc 1 102 0
 366 00aa 094B     		ldr	r3, .L16+24
 367 00ac C022     		mov	r2, #192
 368 00ae 9200     		lsl	r2, r2, #2
 369 00b0 5A60     		str	r2, [r3, #4]
 103:../Sources/TFC/TFC_Servo.c ****                               
 104:../Sources/TFC/TFC_Servo.c **** }
 370              		.loc 1 104 0
 371 00b2 BD46     		mov	sp, r7
 372              		@ sp needed for prologue
 373 00b4 80BD     		pop	{r7, pc}
 374              	.L17:
 375 00b6 C046     		.align	2
 376              	.L16:
 377 00b8 00700440 		.word	1074032640
 378 00bc 04100000 		.word	4100
 379 00c0 FFFFFFFC 		.word	-50331649
 380 00c4 3C100000 		.word	4156
 381 00c8 00900340 		.word	1073975296
 382 00cc 4C1D0000 		.word	7500
 383 00d0 00A00440 		.word	1074044928
 384              		.cfi_endproc
 385              	.LFE3:
 387              		.text
 388              	.Letext0:
 389              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 390              		.file 3 "C:/Users/Jared/Desktop/freescalecup/FRDM-TFC/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_Servo.c
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:23     .text.TFC_SetServo:00000000 $t
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:28     .text.TFC_SetServo:00000000 TFC_SetServo
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:118    .text.TFC_SetServoDutyCycle:00000000 TFC_SetServoDutyCycle
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:100    .text.TFC_SetServo:00000078 $d
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:113    .text.TFC_SetServoDutyCycle:00000000 $t
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:187    .text.TFC_SetServoDutyCycle:00000064 $d
                            *COM*:00000001 ServoTickVar
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:193    .text.FTM1_IRQHandler:00000000 $t
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:198    .text.FTM1_IRQHandler:00000000 FTM1_IRQHandler
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:246    .text.FTM1_IRQHandler:00000038 $d
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:252    .text.TFC_InitServos:00000000 $t
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:257    .text.TFC_InitServos:00000000 TFC_InitServos
C:\Users\Jared\AppData\Local\Temp\cca8qAU5.s:377    .text.TFC_InitServos:000000b8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dadd
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2f
__aeabi_ui2f
__aeabi_fmul
__aeabi_f2uiz
enable_irq
